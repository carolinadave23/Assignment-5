5.9
7. Write a program that displays a single character at 100 random screen locations, using a timing delay of 100 milliseconds. HINT: Use
    the GetMaxXY procedure to determine the current size of the console window.

; 5.9 #7

.386
.model flat,stdcall
.stack 4096
ExitProcess proto,dwExitCode:dword
GetMaxXY	proto
RandomRange proto
Gotoxy		proto
WriteChar	proto
Delay		proto

.data
xVal BYTE ?
yVal BYTE ?
numberRows BYTE ?
numberCols BYTE ?

.code
main proc				
	
	mov ecx, 100
	
	POOPLOOP:
		;get a random location
			call GetMaxXY
			mov numberCols, dl			;maxX in edx
			mov numberRows, al			;maxY in eax

			;Get randomn column to display in
			mov al, numberCols
			inc al
			call RandomRange
			mov xVal, al

			;Get random row to display in
			mov al, numberRows
			inc al
			call RandomRange
			mov yVal, al

			;Mov cursor to x,y coordinate we just calculated
			mov dh, yVal
			mov dl, xVal
			call Gotoxy		;locate cursor

			;print character at x,y
			mov al, 'A'
			call WriteChar

			mov eax, 100
			call Delay

	LOOP POOPLOOP

	invoke ExitProcess,0
main endp
end main


10. Write a procedure that produces N values in the Fibonacci number series and stores them in an array of doubleword. Input parameters 
    should be a pointer to an array of doubleword, a counter of the number of values to generate. Write a test program that calls your 
    procedure, passing N=47. The first value in the array will be 1, and the last value will be 2,971,215,073. Use the visual studio 
    debugger to open and inspect the array contents.
    
;Fibonacci Sequence

ExitProcess proto
WriteInt64  proto
Crlf	    proto

.data
nMinus2 QWORD 0
nMinus1 QWORD 1
n	    QWORD ?

.code
main proc

	;set the loop counter to 47
	mov rcx,47

	;print nMinus2
	mov rax, nMinus2
	call WriteInt64
	call Crlf

	;print nMinus1
	mov rax, nMinus1
	call WriteInt64 
	call Crlf

	STARTLOOP:
	;set n = nMinus2 + nMinus1	;1 + 1
	mov r9, nMinus2
	add r9, nMinus1
	mov n, r9

	;print n
	mov rax, n
	call WriteInt64
	call Crlf

	; nMinus2 = nMinus1
	mov r9, nMinus1
	mov nMinus2, r9

	;nMinus1 = n
	mov r9, n
	mov nMinus1, r9
	LOOP STARTLOOP

	mov ecx,0
	call ExitProcess
main endp
end
